{"ast":null,"code":"var _jsxFileName = \"/Users/barrychenault/projects/facerecognitionbrain/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'b322f1a0ba4f486f8a521f4ab50aac74'\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      const photo = this.state.input;\n      const USER_ID = \"clarifai\";\n      const PAT = \"d856113018c0449fb522e67f98b9b6e9\";\n      const APP_ID = \"main\";\n      const MODEL_ID = \"face-detection\";\n      const MODEL_VERSION_ID = \"6dc7e46bc9124c5c8824be4822abe105\";\n      const IMAGE_URL = photo;\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": IMAGE_URL\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.json()).then(result => this.displayFaceBox(this.calculateFaceLocation(result))).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        className: \"particles\",\n        color: \"#F8F9F9\",\n        num: 200,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","app","App","apiKey","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","setState","imageUrl","state","input","photo","USER_ID","PAT","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","json","result","displayFaceBox","calculateFaceLocation","catch","error","render"],"sources":["/Users/barrychenault/projects/facerecognitionbrain/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\n\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'b322f1a0ba4f486f8a521f4ab50aac74'\n });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    const photo = this.state.input;\n\n    const USER_ID = \"clarifai\";\n    const PAT = \"d856113018c0449fb522e67f98b9b6e9\";\n    const APP_ID = \"main\";\n    const MODEL_ID = \"face-detection\";\n    const MODEL_VERSION_ID = \"6dc7e46bc9124c5c8824be4822abe105\";\n    const IMAGE_URL = photo;\n\n    const raw = JSON.stringify({\n        \"user_app_id\": {\n            \"user_id\": USER_ID,\n            \"app_id\": APP_ID\n        },\n        \"inputs\": [\n            {\n                \"data\": {\n                    \"image\": {\n                        \"url\": IMAGE_URL\n                    }\n                }\n            }\n        ]\n    });\n\n    const requestOptions = {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Key ' + PAT\n        },\n        body: raw\n    };\n\n    fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n        .then(response => response.json())\n        .then(result => this.displayFaceBox(this.calculateFaceLocation(result)))\n        .catch(error => console.log('error', error));\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBg className='particles' color=\"#F8F9F9\" num={200} type=\"cobweb\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank/>\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        {/* <FaceRecognition /> */}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}