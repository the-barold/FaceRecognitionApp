{"ast":null,"code":"var _jsxFileName = \"/Users/barrychenault/projects/facerecognitionbrain/facerecognitionbrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'b322f1a0ba4f486f8a521f4ab50aac74'\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      // console.log('click');\n      this.setState({\n        imageURL: this.state.input\n      });\n      app.models.predict({\n        id: 'face-detection',\n        name: 'face-detection',\n        version: '6dc7e46bc9124c5c8824be4822abe105',\n        type: 'visual-detector'\n      }, this.state.input).then(response => {\n        console.log('hi', response);\n        if (response) {\n          fetch('https://samples.clarifai.com/face-det.jpg', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        className: \"particles\",\n        color: \"#F8F9F9\",\n        num: 200,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Clarifai","Navigation","Logo","ImageLinkForm","Rank","ParticlesBg","app","App","apiKey","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","setState","imageURL","state","input","models","predict","id","name","version","type","then","response","fetch","method","headers","body","JSON","stringify","user","json","count","Object","assign","entries","displayFaceBox","calculateFaceLocation","catch","err","render"],"sources":["/Users/barrychenault/projects/facerecognitionbrain/facerecognitionbrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\n\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'b322f1a0ba4f486f8a521f4ab50aac74'\n });\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    // console.log('click');\n    this.setState({imageURL: this.state.input});\n    app.models\n      .predict(\n        {\n          id: 'face-detection',\n          name: 'face-detection',\n          version: '6dc7e46bc9124c5c8824be4822abe105',\n          type: 'visual-detector',\n        }, this.state.input)\n        .then(response => {\n          console.log('hi', response)\n          if (response) {\n            fetch('https://samples.clarifai.com/face-det.jpg', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count}))\n              })\n  \n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err));\n      }\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <ParticlesBg className='particles' color=\"#F8F9F9\" num={200} type=\"cobweb\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank/>\n        <ImageLinkForm \n          onInputChange={this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}\n        />\n        {/* <FaceRecognition /> */}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,WAAW,MAAM,cAAc;AAEtC,OAAO,WAAW;AAAC;AAEnB,MAAMC,GAAG,GAAG,IAAIN,QAAQ,CAACO,GAAG,CAAC;EAC3BC,MAAM,EAAE;AACT,CAAC,CAAC;AAEH,MAAMD,GAAG,SAASR,SAAS,CAAC;EAC1BU,WAAW,GAAG;IACZ,KAAK,EAAE;IAAC,KAMVC,aAAa,GAAIC,KAAK,IAAK;MACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IACjC,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACrB;MACA,IAAI,CAACC,QAAQ,CAAC;QAACC,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACC;MAAK,CAAC,CAAC;MAC3Cd,GAAG,CAACe,MAAM,CACPC,OAAO,CACN;QACEC,EAAE,EAAE,gBAAgB;QACpBC,IAAI,EAAE,gBAAgB;QACtBC,OAAO,EAAE,kCAAkC;QAC3CC,IAAI,EAAE;MACR,CAAC,EAAE,IAAI,CAACP,KAAK,CAACC,KAAK,CAAC,CACnBO,IAAI,CAACC,QAAQ,IAAI;QAChBhB,OAAO,CAACC,GAAG,CAAC,IAAI,EAAEe,QAAQ,CAAC;QAC3B,IAAIA,QAAQ,EAAE;UACZC,KAAK,CAAC,2CAA2C,EAAE;YACjDC,MAAM,EAAE,KAAK;YACbC,OAAO,EAAE;cAAC,cAAc,EAAE;YAAkB,CAAC;YAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACnBX,EAAE,EAAE,IAAI,CAACJ,KAAK,CAACgB,IAAI,CAACZ;YACtB,CAAC;UACH,CAAC,CAAC,CACCI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACQ,IAAI,EAAE,CAAC,CACjCT,IAAI,CAACU,KAAK,IAAI;YACb,IAAI,CAACpB,QAAQ,CAACqB,MAAM,CAACC,MAAM,CAAC,IAAI,CAACpB,KAAK,CAACgB,IAAI,EAAE;cAAEK,OAAO,EAAEH;YAAK,CAAC,CAAC,CAAC;UAClE,CAAC,CAAC;QAEN;QACA,IAAI,CAACI,cAAc,CAAC,IAAI,CAACC,qBAAqB,CAACd,QAAQ,CAAC,CAAC;MAC3D,CAAC,CAAC,CACDe,KAAK,CAACC,GAAG,IAAIhC,OAAO,CAACC,GAAG,CAAC+B,GAAG,CAAC,CAAC;IACjC,CAAC;IAvCH,IAAI,CAACzB,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;EACH;EAuCAyB,MAAM,GAAG;IACP,oBACE;MAAK,SAAS,EAAC,KAAK;MAAA,wBAClB,QAAC,WAAW;QAAC,SAAS,EAAC,WAAW;QAAC,KAAK,EAAC,SAAS;QAAC,GAAG,EAAE,GAAI;QAAC,IAAI,EAAC,QAAQ;QAAC,EAAE,EAAE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAG,eACvF,QAAC,UAAU;QAAA;QAAA;QAAA;MAAA,QAAG,eACd,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACR,QAAC,IAAI;QAAA;QAAA;QAAA;MAAA,QAAE,eACP,QAAC,aAAa;QACZ,aAAa,EAAE,IAAI,CAACnC,aAAc;QAClC,cAAc,EAAE,IAAI,CAACM;MAAe;QAAA;QAAA;QAAA;MAAA,QACpC;IAAA;MAAA;MAAA;MAAA;IAAA,QAEE;EAEV;AACF;AAGA,eAAeT,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}